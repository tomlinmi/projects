// Please refrain from tampering with the setup code provided here,
// as the index.html and test files rely on this setup to work properly.
// Only add code (helper methods, variables, etc.) within the scope
// of the anonymous function on line 6

const substitutionModule = (function () {
  // you can add any code you want within this function scope
  function substitution(input, alphabet, encode = true) {
  const alphaKey = "abcdefghijklmnopqrstuvwxyz";  
    
    //helper function to validate the alphabet to check for lengths.
    const validAlphabet=(alphabet)=> { if(alphabet.length !==26) throw new Error('error'); for(let i=0;i<alphabet.length;i++){ for(let j=i+1;j<alphabet.length;j++){ if(alphabet[i]===alphabet[j]){ throw new Error('error'); } } } } 
                                                                              }
  
  function mapTo(input, fromKey, toKey) { if (input.match(/\s/)) return input; const index = fromKey.indexOf(input); if (index === -1) throw new Error(`error`); return toKey[index]; }
    
    try { validAlphabet(alphabet); const codeKey = alphabet.toLowerCase().split(""); return input .toLowerCase() .split("") .map( (word) => encode ? mapTo(word, alphaKey, codeKey) : mapTo(word, codeKey, alphaKey) ) .join(""); } catch (errr) { return false; }
                            
  return {
    substitution,
  };
})();

module.exports = { substitution: substitutionModule.substitution };
