
import "./App.css"
import ProfileEdit from "./ProfileEdit";

function App() {
return (
      <>
	  
	 <ProfileEdit/>
	  
	  </>
	  );

}

export default App;




import React, {useState, useEffect} from 'react';

function ProfileEdit() {
    const [user, setUser] = useState({});

  console.log('render', user);  //added for review when bits of code has run
//load user
    useEffect(() => {
        console.log('useEffect');  //added for review
      async function loadUsers() {
        const response = await fetch(
          "https://jsonplaceholder.typicode.com/users/2"
        );
        const userFromAPI = await response.json();
        console.log('setUser', userFromAPI);  //added for review
        setUser(userFromAPI);
      }
      loadUsers();
    }, []); // Passing [] so that it only runs the effect once


    useEffect(() => {
        if (user.username) {
          document.title = `${user.username} : Edit Profile`;
        } else {
          document.title = "Edit Profile";
        }
      }, [user]); // Rerun this effect when the user changes, set the document title



  
  
   function changeHandler(event) {
        setUser({ ...user, [event.target.name]: event.target.value });
      }

//add submit handler

async function submitHandler(event){
    event.preventDefault();
    const response = await fetch(
`https://jsonplaceholder.typicode.com/users/${user.id}
`,
{  
    method: 'PUT', 
    body:JSON.stringify(user),
    
    }

    );
    const savedData = await response.json();
    console.log('Saved user!', savedData);

}

  //edit form

    if (user.id) {
      // `user.id` is truthy after the API call returns
      return (
        <form name="profileEdit" onSubmit={submitHandler}>
            <label htmlFor="username">
                User Name:
            <input
              id="username"
              name="username"
              type="text"
              value={user.username}
              onChange={changeHandler}
            />
          </label>

          
            <label htmlFor="email">
            Email:
            <input 
            id="email" 
            name="email" 
            type="email" 
            value={user.email}
            onChange={changeHandler} 
            />
          </label>
          <button type='submit'>Save</button>

        </form>
      );
    }
    return "Loading...";
  }


  export default ProfileEdit;