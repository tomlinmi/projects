import React, { useEffect, useState } from "react"
import "./App.css"

import AlbumList from "./AlbumList"
import UserList from "./UserList"

function App() {
  const [users, setUsers] = useState([])
  const [currentUser, setCurrentUser] = useState({})
  const [albums, setAlbums] = useState([])
  const title = document.title

  
  useEffect(() => {
	  document.title = "Awesome Album App"
	  return () => document.title = title
  }, [])
  

  return (
    <div className="App">
      <div className="left column">
        <UserList users={users} setUsers={setUsers} setCurrentUser={setCurrentUser} />
      </div>
      <div className="right column">
        <AlbumList user={currentUser} albums={albums} setAlbums={setAlbums} />
      </div>
    </div>
  )
}

export default App


import React, { useEffect } from "react"

function UserList({ users, setUsers, setCurrentUser }) {
  
  useEffect(()=>{
    const abortHandler = new AbortController()
    
    async function loadUsers() {
      try {
        const response = await fetch(
          'https://jsonplaceholder.typicode.com/users',
          {signal: abortHandler.signal})
          
        const usersFromAPI = await response.json()
        setUsers(usersFromAPI)
      }catch (error){
		  
        if (error.type == "aborted") {
          console.log("Abort")
        }else{
		  console.log(error)
		}
      }
    }
    loadUsers()
    
    return () => {
     abortHandler.abort() 
    }
  }, [])
    
    
  return (
    <ul className="user-list">
      {users.map((user) => (
        <li key={user.id}>
          <button type="button" onClick={() => setCurrentUser(user)}>
            {user.name}
          </button>
        </li>
      ))}
    </ul>
  )
}

export default UserList

import React, { useEffect, useState } from "react"

function AlbumList({ user = {}, albums, setAlbums }) {
  if(!user.name) {
	  return <p>Please click on a user name to the left</p>
  }

  
  useEffect(() => {
    const abortHandler = new AbortController()
    
    async function loadAlbums(){
      if(user.id){
        try {
          const response = await fetch(`https://jsonplaceholder.typicode.com/albums?userId=${user.id}`, 
          {signal: abortHandler.signal})

          const albumsFromAPI = await response.json()
          setAlbums(albumsFromAPI)

        } catch (error) {
          if (error.type == "aborted") {
            console.log("Abort albums")
          }else{
            console.log(error)
          }
        }
      }
    }

    loadAlbums()

    return () => {
      setAlbums([])
      abortHandler.abort()
    }
  },[user])
  
  return (
    <React.Fragment>
      <h1>{user.name} Albums </h1>
      <ul>
      {albums.map((album) => (
        <li key={album.id}>{album.id} - {album.title}</li>
      ))}
      </ul>
    </React.Fragment>
  )
}

export default AlbumList