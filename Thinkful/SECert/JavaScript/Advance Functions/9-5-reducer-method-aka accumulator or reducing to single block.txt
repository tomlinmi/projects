//REDUCE () method - iterates over an array from left to right and reduces it to a single output value, alternative to the accumulator pattern for loop.
//Used for sum or totals in array. Can also be used on Objects, to take a larger block of data and reduce it to single block of data.
// it will pass each value into a function, step by step. The reduce() method will also pass in the return value from the previous step.

//total is the starting value of the accumulator and area is the array value on that pass. Initial value for total is 0

const areas = [768, 1004.2, 433.1];
let result = areas.reduce((total, area) => total + area, 0);
console.log(result); //> 2205.3

//in this example the starting # value is used in the function

const areas = [768, 1004.2, 433.1];
let initialValue = 200;
let result = areas.reduce((total, area) => total + area, initialValue);
console.log(result); //> 2405.3

//example with logging

const areas = [768, 1004.2, 433.1];
let initialValue = 200;
let result = areas.reduce((total, area, index) => {
  console.log(`index: ${index}`, `total: ${total}`, `area: ${area}`);
  return total + area;
}, initialValue);
console.log(result); 
//index:0 total: 200 area:768
//index:1 total: 968 area: 1004.2
//index:2 total:1972.2 area:433.1
// 2405.3

//Remove the initialValue
//The second argument in reduce() is optional

const areas = [768, 1004.2, 433.1];
let result = areas.reduce((total, area, index) => {
  console.log(`index: ${index}`, `total: ${total}`, `area: ${area}`);
  return total + area;
});
console.log(result); 
//index: 1 total: 768 area: 1004.2
//index: 2 total: 1772.2 area: 433.1
//2205.3

REDUCE METHOD with any Objects
//The initial value that reduce() uses can be any data type

const parks = [
  { name: "Acadia", areaInSquareKm: 198.6 },
  { name: "Crater Lake", areaInSquareKm: 741.5 },
  { name: "Kenai Fjords", areaInSquareKm: 2710 },
  { name: "Zion", areaInSquareKm: 595.9 },
];

const parkToAreasObject = parks.reduce((result, park) => {
  result[park.name] = park.areaInSquareKm;
  return result;
}, {});

// the following is created in the result variable
{
  Acadia: 198.6,
  'Crater Lake': 741.5,
  'Kenai Fjords': 2710,
  Zion: 595.9
}
//At each step in the function given to reduce(), a new key [park.name] is created in the given object. 
//The value assigned to that key is the areaInSquareKm value. 
//Then, the overall object is returned so that it can serve as the accumulator (result) in the next iteration.

