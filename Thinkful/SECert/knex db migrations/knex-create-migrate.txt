Create Elephant Postgres dB and connect to Beaver
Host = host (do not include the parenthisis)
DB and User is Database
Password = password

In the knex.js file update environment connection with "db url" from postgres


Configure the server - You can use the popular dotenv library to manage your environment variables. You can store your environment variables in a .env file, and dotenv will then inject environment variables into the appropriate environment.
npm install knex pg

npm install dotenv

KNEX CLI commands


create a migration file in the project folder

npx knex migrate:make [migration_name]

example
npx knex migrate:make createSuppliersTable

define tables in the exports.up and down

example for suppliers table


exports.up = function (knex) {
  return knex.schema.createTable("suppliers", (table) => {
    table.increments("supplier_id").primary(); // Sets supplier_id as the primary key
    table.string("supplier_name");
    table.string("supplier_address_line_1");
    table.string("supplier_address_line_2");
    table.string("supplier_city");
    table.string("supplier_state");
    table.string("supplier_zip");
    table.string("supplier_phone");
    table.string("supplier_email");
    table.text("supplier_notes");
    table.string("supplier_type_of_goods");
    table.timestamps(true, true); // Adds created_at and updated_at columns
  });
};

run the latest migration manually

npx knex migrate:latest


Roll back

npx knex migrate:rollback


example migration file to add product price and rename product_name

npx knex migrate:make productsAddPriceAndChangeProductNameToProductTitle

Keep track of migrations completed and pending

npx knex migrate:list

ROLL BACK SPECFIC MIGRATION
npx knex migrate:down migration_file_name

example

npx knex migrate:down 20220828132202_productsAddPriceAndChangeProductNameToProductTitle.js


