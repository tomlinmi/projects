{"ast":null,"code":"export const deletePost = ignoreAbortError(deletePostDelegate);\nexport const fetchUsersWithPosts = ignoreAbortError(fetchUsersWithPostsDelegate);\nexport const fetchUserWithPosts = ignoreAbortError(fetchUserWithPostsDelegate);\n\nfunction ignoreAbortError(delegate) {\n  return async function () {\n    try {\n      for (var _len = arguments.length, delegateArguments = new Array(_len), _key = 0; _key < _len; _key++) {\n        delegateArguments[_key] = arguments[_key];\n      }\n\n      return await delegate.apply(null, delegateArguments);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  };\n}\n\nasync function deletePostDelegate(postId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    signal\n  });\n  return response.json();\n}\n\nasync function fetchUserWithPostsDelegate(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const response = await fetch(url, {\n    signal\n  });\n\n  if (response.status !== 200) {\n    throw new Error(`User not found with ID: ${userId}`);\n  }\n\n  const user = await response.json();\n  user.posts = await fetchPostsForUser(userId, signal);\n  return user;\n}\n\nasync function fetchUsersWithPostsDelegate(signal) {\n  try {\n    const users = await fetchUsers(signal);\n    return await Promise.all(users.map(user => fetchPostsForUser(user.id, signal).then(posts => {\n      user.posts = posts;\n      return user;\n    })));\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\nasync function fetchUsers(signal) {\n  const url = `https://jsonplaceholder.typicode.com/users`;\n  const response = await fetch(url, {\n    signal\n  });\n  return response.json();\n}\n\nasync function fetchPostsForUser(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n  const response = await fetch(url, {\n    signal\n  });\n  return response.json();\n}","map":{"version":3,"names":["deletePost","ignoreAbortError","deletePostDelegate","fetchUsersWithPosts","fetchUsersWithPostsDelegate","fetchUserWithPosts","fetchUserWithPostsDelegate","delegate","delegateArguments","apply","error","name","postId","signal","url","response","fetch","method","json","userId","status","Error","user","posts","fetchPostsForUser","users","fetchUsers","Promise","all","map","id","then"],"sources":["C:/Users/mntom/projects/Thinkful/MY-REACT-APPS/react-router-assessment/src/api/index.js"],"sourcesContent":["export const deletePost = ignoreAbortError(deletePostDelegate);\nexport const fetchUsersWithPosts = ignoreAbortError(\n  fetchUsersWithPostsDelegate\n);\nexport const fetchUserWithPosts = ignoreAbortError(fetchUserWithPostsDelegate);\n\nfunction ignoreAbortError(delegate) {\n  return async (...delegateArguments) => {\n    try {\n      return await delegate.apply(null, delegateArguments);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  };\n}\n\nasync function deletePostDelegate(postId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\n  const response = await fetch(url, { method: \"DELETE\", signal });\n  return response.json();\n}\n\nasync function fetchUserWithPostsDelegate(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const response = await fetch(url, { signal });\n  if (response.status !== 200) {\n    throw new Error(`User not found with ID: ${userId}`);\n  }\n  const user = await response.json();\n  user.posts = await fetchPostsForUser(userId, signal);\n  return user;\n}\n\nasync function fetchUsersWithPostsDelegate(signal) {\n  try {\n    const users = await fetchUsers(signal);\n    return await Promise.all(\n      users.map((user) =>\n        fetchPostsForUser(user.id, signal).then((posts) => {\n          user.posts = posts;\n          return user;\n        })\n      )\n    );\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\nasync function fetchUsers(signal) {\n  const url = `https://jsonplaceholder.typicode.com/users`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n\nasync function fetchPostsForUser(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGC,gBAAgB,CAACC,kBAAD,CAAnC;AACP,OAAO,MAAMC,mBAAmB,GAAGF,gBAAgB,CACjDG,2BADiD,CAA5C;AAGP,OAAO,MAAMC,kBAAkB,GAAGJ,gBAAgB,CAACK,0BAAD,CAA3C;;AAEP,SAASL,gBAAT,CAA0BM,QAA1B,EAAoC;EAClC,OAAO,kBAAgC;IACrC,IAAI;MAAA,kCADWC,iBACX;QADWA,iBACX;MAAA;;MACF,OAAO,MAAMD,QAAQ,CAACE,KAAT,CAAe,IAAf,EAAqBD,iBAArB,CAAb;IACD,CAFD,CAEE,OAAOE,KAAP,EAAc;MACd,IAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;QAC/B,MAAMD,KAAN;MACD;IACF;EACF,CARD;AASD;;AAED,eAAeR,kBAAf,CAAkCU,MAAlC,EAA0CC,MAA1C,EAAkD;EAChD,MAAMC,GAAG,GAAI,8CAA6CF,MAAO,EAAjE;EACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;IAAEG,MAAM,EAAE,QAAV;IAAoBJ;EAApB,CAAN,CAA5B;EACA,OAAOE,QAAQ,CAACG,IAAT,EAAP;AACD;;AAED,eAAeZ,0BAAf,CAA0Ca,MAA1C,EAAkDN,MAAlD,EAA0D;EACxD,MAAMC,GAAG,GAAI,8CAA6CK,MAAO,EAAjE;EACA,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;IAAED;EAAF,CAAN,CAA5B;;EACA,IAAIE,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;IAC3B,MAAM,IAAIC,KAAJ,CAAW,2BAA0BF,MAAO,EAA5C,CAAN;EACD;;EACD,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACG,IAAT,EAAnB;EACAI,IAAI,CAACC,KAAL,GAAa,MAAMC,iBAAiB,CAACL,MAAD,EAASN,MAAT,CAApC;EACA,OAAOS,IAAP;AACD;;AAED,eAAelB,2BAAf,CAA2CS,MAA3C,EAAmD;EACjD,IAAI;IACF,MAAMY,KAAK,GAAG,MAAMC,UAAU,CAACb,MAAD,CAA9B;IACA,OAAO,MAAMc,OAAO,CAACC,GAAR,CACXH,KAAK,CAACI,GAAN,CAAWP,IAAD,IACRE,iBAAiB,CAACF,IAAI,CAACQ,EAAN,EAAUjB,MAAV,CAAjB,CAAmCkB,IAAnC,CAAyCR,KAAD,IAAW;MACjDD,IAAI,CAACC,KAAL,GAAaA,KAAb;MACA,OAAOD,IAAP;IACD,CAHD,CADF,CADW,CAAb;EAQD,CAVD,CAUE,OAAOZ,KAAP,EAAc;IACd,IAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;MAC/B,MAAMD,KAAN;IACD;EACF;AACF;;AAED,eAAegB,UAAf,CAA0Bb,MAA1B,EAAkC;EAChC,MAAMC,GAAG,GAAI,4CAAb;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;IAAED;EAAF,CAAN,CAA5B;EACA,OAAOE,QAAQ,CAACG,IAAT,EAAP;AACD;;AAED,eAAeM,iBAAf,CAAiCL,MAAjC,EAAyCN,MAAzC,EAAiD;EAC/C,MAAMC,GAAG,GAAI,qDAAoDK,MAAO,EAAxE;EACA,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;IAAED;EAAF,CAAN,CAA5B;EACA,OAAOE,QAAQ,CAACG,IAAT,EAAP;AACD"},"metadata":{},"sourceType":"module"}